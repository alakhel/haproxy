- name: Docker installation test
  hosts: docker-node
  become: yes
  tasks:
    - name: Dependencies Installation
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
    - name: add link GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker to repository 
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: Docker Installation
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Docker Module for Python Installation
      pip:
        name: docker
    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes
    - name: create build directory
      file:
        path: /root/haproxy
        state: directory
        owner: root
        group: root
        mode: '0755'
    - name: copy ProjectFolder
      copy:
        src: ./
        dest: /root/haproxy/
        owner: root
        group: root
        mode: '0644'
    - name: build container image
      docker_image:
        name: frontapp:v1.0
        build:
          path: /root/haproxy/frontApp/
        source: build
        state: present
    - name: build container image
      docker_image:
        name: backendapp:v1.0
        build:
          path: /root/haproxy/backend/
        source: build
        state: present

    - name: flatTeamPortal
      docker_container:
        name: flatteamportal
        image: backendapp:v1.0
        command: npm start
        state: started
        ports: 3100:3000
    - name: hapinessAndEntertainement
      docker_container:
        name: hapinessandentertainement
        image: backendapp:v1.0
        command: npm start
        state: started
        ports: 3100:3000
    - name: businessParteners
      docker_container:
        name: businessparteners
        image: backendapp:v1.0
        command: npm start
        state: started
        ports: 3200:3000
    - name: frontapp
      docker_container:
        name: frontapp
        image: frontapp:v1.0
        command: npm start
        state: started
        expose:
        - 80
        ports: 80:80
        