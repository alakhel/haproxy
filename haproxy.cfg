#---------------------------------------------------------------------
# Example configuration for a possible web application.
#
# The full configuration documentation is available online:
#
#    https://www.haproxy.com/documentation/hapee/
#
# Or in the hapee-2.4r1-lb-doc package.
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Process-global settings
#---------------------------------------------------------------------
global
    log                127.0.0.1 local0
    log                127.0.0.1 local1 notice
    user               hapee-lb
    group              hapee
    chroot             /var/empty
    pidfile            /var/run/hapee-2.4/hapee-lb.pid
    stats socket       /var/run/hapee-2.4/hapee-lb.sock user hapee-lb group hapee mode 660 level admin expose-fd listeners
    stats timeout      10m
    #module-path        /opt/hapee-2.4/modules
    # module-load        hapee-lb-update.so
    # module-load        hapee-lb-sanitize.so
    daemon
    log-send-hostname
    ssl-default-bind-options ssl-min-ver TLSv1.2
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384


#---------------------------------------------------------------------
# Common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode               http
    log                global
    option             httplog
    option             dontlognull
    option             forwardfor except 127.0.0.0/8
    option             redispatch
    retries            3
    timeout connect    10s
    timeout client     300s
    timeout server     300s


#---------------------------------------------------------------------
# main frontend which forwards to the backends
#---------------------------------------------------------------------
frontend fe_main
      bind *:80
      bind *:443 ssl crt /etc/hapee-2.4/certs/ssl.pem
      http-request redirect scheme https unless { ssl_fc }

      # redirect to the stats page if everything is dead
      #acl be_app_ok      nbsrv(be_app) gt 0
      #acl be_static_ok   nbsrv(be_static) gt 0
      #http-request redirect location /hapee-stats if !be_app_ok !be_static_ok !url_stats

      filter compression
      compression algo gzip

      acl url_stats      path_beg    /hapee-stats

      acl PATH_flatteam             path_beg -i /flatTeamPortal
      acl PATH_businessparteners    path_beg -i /businessParteners
      acl PATH_be_hap_and_enter     path_beg -i /hapinessAndEntertainement
      acl PATH_frontapp             path_beg    /
      

            # serve the stats page if the URL starts with /hapee-stats
      use_backend        be_stats    if url_stats

      use_backend be_businessparteners if PATH_businessparteners
      use_backend be_flatteam if PATH_flatteam
      use_backend be_hap_and_enter if PATH_be_hap_and_enter
      use_backend be_flatteam if { path -i -m beg /test/ }
      use_backend be_front_app if PATH_frontapp


      
      # the rest is the application
      default_backend    be_front_app


backend be_front_app
      balance roundrobin
      mode http
      cookie SERVER_USED insert indirect nocache
      server webserver1 ip-172-31-1-118.eu-west-3.compute.internal:80 check cookie webserver1
      server webserver2 ip-172-31-12-2.eu-west-3.compute.internal:80 check cookie webserver2

backend be_flatteam
      balance roundrobin
      server webserver1 ip-172-31-1-118.eu-west-3.compute.internal:3000 check
      server webserver2 ip-172-31-12-2.eu-west-3.compute.internal:3000 check

backend be_hap_and_enter
      balance roundrobin
      server webserver1 ip-172-31-1-118.eu-west-3.compute.internal:3100 check
      server webserver2 ip-172-31-12-2.eu-west-3.compute.internal:3100 check

backend be_businessparteners
      balance roundrobin
      server webserver1 ip-172-31-1-118.eu-west-3.compute.internal:3200 check
      server webserver2 ip-172-31-12-2.eu-west-3.compute.internal:3200 check


#---------------------------------------------------------------------
# backend dedicated to serve the statistics page
#---------------------------------------------------------------------
backend be_stats
    stats uri /hapee-stats

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend be_app
#    balance            roundrobin
#    cookie             SERVERID insert indirect nocache
#    server app1        127.0.0.1:5001 cookie a1 check
#    server app2        127.0.0.1:5002 cookie a2 check
#    server app3        127.0.0.1:5003 cookie a3 check
#    server app4        127.0.0.1:5004 cookie a4 check
